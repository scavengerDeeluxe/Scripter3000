//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ScriptArcade.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.14.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
					$a = 0
					$timespan = New-Object System.TimeSpan(0, 0, 1)
					$scope = New-Object System.Management.ManagementScope(""\\.\root\ccm\Events"")
					$query = New-Object System.Management.WQLEventQuery(""CCM_Event"", $timespan)
					$watcher = New-Object System.Management.ManagementEventWatcher($scope,$query)
					do
					{
					$b = $watcher.WaitForNextEvent()
					$b
					}
					while ($a -ne 1)
				")]
        public string PSEventQuery {
            get {
                return ((string)(this["PSEventQuery"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("O:BAG:BAD:(A;;CCDCSW;;;WD)(A;;CCDCLCSWRP;;;BA)(A;;CCDCLCSWRP;;;LU)(A;;CCDCLCSWRP;" +
            ";;S-1-5-32-562)")]
        public string MachineLaunchRestriction {
            get {
                return ((string)(this["MachineLaunchRestriction"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("O:BAG:BAD:(A;;CCDCLC;;;WD)(A;;CCDCLC;;;LU)(A;;CCDCLC;;;S-1-5-32-562)(A;;CCDCLC;;;" +
            "AN)")]
        public string MachineAccessRestriction {
            get {
                return ((string)(this["MachineAccessRestriction"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("O:BAG:BAD:(A;;CCDCLCSWRP;;;SY)(A;;CCDCLCSWRP;;;BA)(A;;CCDCLCSWRP;;;IU)")]
        public string DefaultLaunchPermission {
            get {
                return ((string)(this["DefaultLaunchPermission"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public string NoLocalAdminCheck {
            get {
                return ((string)(this["NoLocalAdminCheck"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public string showPingButton {
            get {
                return ((string)(this["showPingButton"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public string HideNonUserUIExperienceApplicattions {
            get {
                return ((string)(this["HideNonUserUIExperienceApplicattions"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public string HideShutdownPane {
            get {
                return ((string)(this["HideShutdownPane"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n\t\t\t\t\t$CMMP = \'Management Point FQDN\'\r\n\t\t\t\t\t$CMSiteCode = \'xxx\'\r\n\r\n\t\t\t\t\t$ErrorAc" +
            "tionPreference = \"SilentlyContinue\"\r\n\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t#Get ccm cache pat" +
            "h for later cleanup...\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t$ccmcache = ([wmi]\"ROOT\\ccm\\SoftM" +
            "gmtAgent:CacheConfig.ConfigKey=\'Cache\'\").Location\r\n\t\t\t\t\t} catch {}\r\n\r\n\t\t\t\t\t#down" +
            "load ccmsetup.exe from MP\r\n\t\t\t\t\t$webclient = New-Object System.Net.WebClient\r\n\t\t" +
            "\t\t\t$url = \"http://$($CMMP)/CCM_Client/ccmsetup.exe\"\r\n\t\t\t\t\t$file = \"c:\\windows\\te" +
            "mp\\ccmsetup.exe\"\r\n\t\t\t\t\t$webclient.DownloadFile($url,$file)\r\n\r\n\t\t\t\t\t#stop the old" +
            " sms agent service\r\n\t\t\t\t\tstop-service \'ccmexec\' -ErrorAction SilentlyContinue\r\n\r" +
            "\n\t\t\t\t\t#Cleanup cache\r\n\t\t\t\t\tif($ccmcache -ne $null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t" +
            "\t\t\tdir $ccmcache \'*\' -directory | % { [io.directory]::delete($_.fullname, $true)" +
            "  } -ErrorAction SilentlyContinue\r\n\t\t\t\t\t} catch {}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t#Cleanup Exec" +
            "ution History\r\n\t\t\t\t\t#Remove-Item -Path \'HKLM:\\SOFTWARE\\Wow6432Node\\Microsoft\\SMS" +
            "\\Mobile Client\\*\' -Recurse -ErrorAction SilentlyContinue\r\n\t\t\t\t\t#Remove-Item -Pat" +
            "h \'HKLM:\\SOFTWARE\\Microsoft\\SMS\\Mobile Client\\*\' -Recurse -ErrorAction SilentlyC" +
            "ontinue\r\n\r\n\t\t\t\t\t#kill existing instances of ccmsetup.exe\r\n\t\t\t\t\t$ccm = (Get-Proce" +
            "ss \'ccmsetup\' -ErrorAction SilentlyContinue)\r\n\t\t\t\t\tif($ccm -ne $null)\r\n\t\t\t\t\t{\r\n\t" +
            "\t\t\t\t$ccm.kill();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t#run ccmsetup\r\n\t\t\t\t\t$proc = Start-Process -File" +
            "Path \'c:\\windows\\temp\\ccmsetup.exe\' -PassThru -Wait -ArgumentList \"/mp:$($CMMP) " +
            "/source:http://$($CMMP)/CCM_Client CCMHTTPPORT=80 RESETKEYINFORMATION=TRUE SMSSI" +
            "TECODE=$($CMSiteCode) SMSSLP=$($CMMP) FSP=$($CMMP)\"\r\n\t\t\t\t\tSleep(5)\r\n\t\t\t\t\t\"ccmset" +
            "up started...\"\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcatch\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\"an Error occured...\"\r\n\t\t\t\t\t$" +
            "error[0]\r\n\t\t\t\t\t}\r\n\t\t\t\t")]
        public string AgentInstallPS {
            get {
                return ((string)(this["AgentInstallPS"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
					<ArrayOfString xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
						<string>CcmExec</string>
						<string>WinRM</string>
						<string>wuauserv</string>
						<string>LanmanWorkstation</string>
						<string>LanmanServer</string>
						<string>RemoteRegistry</string>
						<string>BITS</string>
						<string>CmRcService</string>
						<string>Winmgmt</string>
						<string>PeerDistSvc</string>
						<string>smstsmgr</string>
						<string>RpcSs</string>
						<string>ccmsetup</string>
					</ArrayOfString>
				")]
        public string ServicesHighlited {
            get {
                return ((string)(this["ServicesHighlited"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n\t\t\t\t\t<ArrayOfString xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"htt" +
            "p://www.w3.org/2001/XMLSchema-instance\">\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\ac" +
            "txprxy.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\atl.dll</string>\r\n\t\t\t\t\t" +
            "\t<string>%systemroot%\\system32\\Bitsprx2.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%" +
            "\\system32\\Bitsprx3.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\browseui.dl" +
            "l</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\cryptdlg.dll</string>\r\n\t\t\t\t\t\t<st" +
            "ring>%systemroot%\\system32\\dssenh.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\syste" +
            "m32\\gpkcsp.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\initpki.dll</string" +
            ">\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\jscript.dll</string>\r\n\t\t\t\t\t\t<string>%syst" +
            "emroot%\\system32\\mshtml.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\msi.dl" +
            "l</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\mssip32.dll</string>\r\n\t\t\t\t\t\t<str" +
            "ing>%systemroot%\\system32\\msxml3.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system" +
            "32\\msxml3r.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\msxml6.dll</string>" +
            "\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\msxml6r.dll</string>\r\n\t\t\t\t\t\t<string>%syste" +
            "mroot%\\system32\\muweb.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\ole32.dl" +
            "l</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\oleaut32.dll</string>\r\n\t\t\t\t\t\t<st" +
            "ring>%systemroot%\\system32\\Qmgr.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system3" +
            "2\\Qmgrprxy.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\rsaenh.dll</string>" +
            "\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\sccbase.dll</string>\r\n\t\t\t\t\t\t<string>%syste" +
            "mroot%\\system32\\scrrun.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\shdocvw" +
            ".dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\shell32.dll</string>\r\n\t\t\t\t\t\t<" +
            "string>%systemroot%\\system32\\slbcsp.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\sys" +
            "tem32\\softpub.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\urlmon.dll</stri" +
            "ng>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\userenv.dll</string>\r\n\t\t\t\t\t\t<string>%sy" +
            "stemroot%\\system32\\vbscript.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\Wi" +
            "nhttp.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\wintrust.dll</string>\r\n\t" +
            "\t\t\t\t\t<string>%systemroot%\\system32\\wuapi.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot" +
            "%\\system32\\wuaueng.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\wuaueng1.dl" +
            "l</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\wucltui.dll</string>\r\n\t\t\t\t\t\t<str" +
            "ing>%systemroot%\\system32\\wucltux.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\syste" +
            "m32\\wups.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\wups2.dll</string>\r\n\t" +
            "\t\t\t\t\t<string>%systemroot%\\system32\\wuweb.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot" +
            "%\\system32\\wuwebv.dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\wbem\\wmisvc." +
            "dll</string>\r\n\t\t\t\t\t\t<string>%systemroot%\\system32\\Xpob2res.dll</string>\r\n\t\t\t\t\t</" +
            "ArrayOfString>\r\n\t\t\t\t")]
        public string RegisterDLLs {
            get {
                return ((string)(this["RegisterDLLs"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n\t\t\t\t\t<ArrayOfString xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"htt" +
            "p://www.w3.org/2001/XMLSchema-instance\">\r\n\t\t\t\t\t\t<string>Password</string>\r\n\t\t\t\t\t" +
            "\t<string>PWD</string>\r\n\t\t\t\t\t</ArrayOfString>\r\n\t\t\t\t")]
        public string CollectionVariablesFilter {
            get {
                return ((string)(this["CollectionVariablesFilter"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n\t\t\t\t\t<ArrayOfString xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"htt" +
            "p://www.w3.org/2001/XMLSchema-instance\">\r\n\t\t\t\t\t\t<string>Operating System|root\\ci" +
            "mv2|SELECT Caption FROM Win32_OperatingSystem</string>\r\n\t\t\t\t\t\t<string>OS Version" +
            "|root\\cimv2|SELECT Version FROM Win32_OperatingSystem</string>\r\n\t\t\t\t\t\t<string>OS" +
            " Architecture|root\\cimv2|SELECT VariableValue FROM  Win32_Environment WHERE Name" +
            "=\'PROCESSOR_ARCHITECTURE\' AND UserName=\'&lt;SYSTEM&gt;\'</string>\r\n\t\t\t\t\t\t<string>" +
            "PC Manufacturer|root\\cimv2|SELECT Manufacturer FROM Win32_ComputerSystem</string" +
            ">\r\n\t\t\t\t\t\t<string>LastHWInv|Root\\CCM\\Scheduler|SELECT LastTriggerTime FROM CCM_Sc" +
            "heduler_History WHERE ScheduleID=\'{00000000-0000-0000-0000-000000000001}\' and Us" +
            "erSID=\'Machine\'</string>\r\n\t\t\t\t\t\t<string>LastSWInv|Root\\CCM\\Scheduler|SELECT Last" +
            "TriggerTime FROM CCM_Scheduler_History WHERE ScheduleID=\'{00000000-0000-0000-000" +
            "0-000000000002}\' and UserSID=\'Machine\'</string>\r\n\t\t\t\t\t\t<string>LastDDR|Root\\CCM\\" +
            "Scheduler|SELECT LastTriggerTime FROM CCM_Scheduler_History WHERE ScheduleID=\'{0" +
            "0000000-0000-0000-0000-000000000003}\' and UserSID=\'Machine\'</string>\r\n\t\t\t\t\t\t<str" +
            "ing>LastMachinePolicyRequest|Root\\CCM\\Scheduler|SELECT LastTriggerTime FROM CCM_" +
            "Scheduler_History WHERE ScheduleID=\'{00000000-0000-0000-0000-000000000021}\' and " +
            "UserSID=\'Machine\'</string>\r\n\t\t\t\t\t\t<string>LastReboot|root\\cimv2|SELECT LastBootU" +
            "pTime FROM Win32_OperatingSystem</string>\r\n\t\t\t\t\t\t<string>InstallDate|root\\cimv2|" +
            "SELECT InstallDate FROM Win32_OperatingSystem</string>\r\n\t\t\t\t\t\t<string>CurrentUse" +
            "r|root\\cimv2|SELECT Username FROM Win32_ComputerSystem</string>\r\n\t\t\t\t\t\t<string>P" +
            "rimaryUsers|ROOT\\ccm\\Policy\\Machine\\ActualConfig|SELECT * FROM CCM_UserAffinity " +
            "WHERE IsUserAffinitySet = \'True\'</string>\r\n\t\t\t\t\t\t<string>FreeDiskSpace on C: (By" +
            "tes)|ROOT\\cimv2|SELECT FreeSpace FROM Win32_LogicalDisk WHERE DeviceID=\'C:\'</str" +
            "ing>\r\n\t\t\t\t\t\t<string>DiskSpace on C: (Bytes)|ROOT\\cimv2|SELECT Size FROM Win32_Lo" +
            "gicalDisk WHERE DeviceID=\'C:\'</string>\r\n\t\t\t\t\t\t<string>Running Executions|root\\CC" +
            "M\\SoftMgmtAgent|select MIFPackageName, RequestID, programID, ReceivedTime, Suspe" +
            "ndReboot, advertid, contentid, RunningState, State from ccm_executionrequestex</" +
            "string>\r\n\t\t\t\t\t\t<string>BIOS Version|root\\cimv2|SELECT SMBIOSBIOSVersion from Win" +
            "32_Bios</string>\r\n\t\t\t\t\t</ArrayOfString>\r\n\t\t\t\t")]
        public string AdhocInv {
            get {
                return ((string)(this["AdhocInv"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
					<ArrayOfString xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
						<string>2b646eff-442b-410e-adf3-d4ec699e0ab4</string>
						<string>3dde85c4-ce0e-4999-ab84-698a569dfcac</string>
						<string>3fd01cd1-9e01-461e-92cd-94866b8d1f39</string>
						<string>9b73a906-6908-4316-b61e-cbab300c9791</string>
						<string>64db983c-10bc-4b47-8f2d-cfff48f34faf</string>
						<string>ed9dee86-eadd-4ac8-82a1-7234a4646e62</string>
						<string>f7cc4bbb-e70e-43e1-978c-1c263d946fff</string>
						<string>fb04b7a5-bc4c-4468-8eb8-937d8eb90efb</string>
					</ArrayOfString>
				")]
        public string ConsoleExtensionGUIDs {
            get {
                return ((string)(this["ConsoleExtensionGUIDs"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string Username {
            get {
                return ((string)(this["Username"]));
            }
            set {
                this["Username"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string Password {
            get {
                return ((string)(this["Password"]));
            }
            set {
                this["Password"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string DefaultHostName {
            get {
                return ((string)(this["DefaultHostName"]));
            }
            set {
                this["DefaultHostName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("5985")]
        public string WinRMPort {
            get {
                return ((string)(this["WinRMPort"]));
            }
            set {
                this["WinRMPort"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public string WinRMSSL {
            get {
                return ((string)(this["WinRMSSL"]));
            }
            set {
                this["WinRMSSL"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string AgentInstallSiteCode {
            get {
                return ((string)(this["AgentInstallSiteCode"]));
            }
            set {
                this["AgentInstallSiteCode"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string AgentInstallMP {
            get {
                return ((string)(this["AgentInstallMP"]));
            }
            set {
                this["AgentInstallMP"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public string HideTSAdvertisements {
            get {
                return ((string)(this["HideTSAdvertisements"]));
            }
            set {
                this["HideTSAdvertisements"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public string HideBusinessHours {
            get {
                return ((string)(this["HideBusinessHours"]));
            }
            set {
                this["HideBusinessHours"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Enter-PSSession {0}  -port {1} -SessionOption (New-PSSessionOption -NoMachineProf" +
            "ile:$true)")]
        public string OpenPSConsoleCommand {
            get {
                return ((string)(this["OpenPSConsoleCommand"]));
            }
            set {
                this["OpenPSConsoleCommand"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n\t\t\t\t\t<ArrayOfString xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"htt" +
            "p://www.w3.org/2001/XMLSchema-instance\">\r\n\t\t\t\t\t\t<string>127.0.0.1</string>\r\n\t\t\t\t" +
            "\t</ArrayOfString>\r\n\t\t\t\t")]
        public string recentlyUsedComputers {
            get {
                return ((string)(this["recentlyUsedComputers"]));
            }
            set {
                this["recentlyUsedComputers"] = value;
            }
        }
    }
}
